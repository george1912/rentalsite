{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nvar isEqual = require('deep-equal');\nimport diff from './util/diff';\nimport { generateID } from './util/uid';\nimport { withMap } from './context';\nvar types = ['symbol', 'line', 'fill', 'fill-extrusion', 'circle'];\nvar toCamelCase = function (str) {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (letter, index) {\n    return index === 0 ? letter.toLowerCase() : letter.toUpperCase();\n  }).replace(/[\\s+]|-/g, '');\n};\nvar eventToHandler = {\n  mousemove: 'OnMouseMove',\n  mouseenter: 'OnMouseEnter',\n  mouseleave: 'OnMouseLeave',\n  mousedown: 'OnMouseDown',\n  mouseup: 'OnMouseUp',\n  click: 'OnClick'\n};\nvar GeoJSONLayer = function (_super) {\n  __extends(GeoJSONLayer, _super);\n  function GeoJSONLayer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.id = _this.props.id || \"geojson-\" + generateID();\n    _this.source = __assign({\n      type: 'geojson'\n    }, _this.props.sourceOptions, {\n      data: _this.props.data\n    });\n    _this.layerIds = [];\n    _this.buildLayerId = function (type) {\n      return _this.id + \"-\" + type;\n    };\n    _this.createLayer = function (type) {\n      var _a = _this.props,\n        before = _a.before,\n        layerOptions = _a.layerOptions,\n        map = _a.map;\n      var layerId = _this.buildLayerId(type);\n      _this.layerIds.push(layerId);\n      var paint = _this.props[toCamelCase(type) + \"Paint\"] || {};\n      var visibility = Object.keys(paint).length ? 'visible' : 'none';\n      var layout = _this.props[toCamelCase(type) + \"Layout\"] || {\n        visibility: visibility\n      };\n      map.addLayer(__assign({\n        id: layerId,\n        source: _this.id,\n        type: type,\n        paint: paint,\n        layout: layout\n      }, layerOptions), before);\n      _this.mapLayerMouseHandlers(type);\n    };\n    _this.mapLayerMouseHandlers = function (type) {\n      var map = _this.props.map;\n      var layerId = _this.buildLayerId(type);\n      var events = Object.keys(eventToHandler);\n      events.forEach(function (event) {\n        var handler = _this.props[\"\" + toCamelCase(type) + eventToHandler[event]] || null;\n        if (handler) {\n          map.on(event, layerId, handler);\n        }\n      });\n    };\n    _this.onStyleDataChange = function () {\n      if (!_this.props.map.getSource(_this.id)) {\n        _this.unbind();\n        _this.initialize();\n        _this.forceUpdate();\n      }\n    };\n    _this.isGeoJSONSource = function (source) {\n      return !!source && typeof source.setData === 'function';\n    };\n    return _this;\n  }\n  GeoJSONLayer.prototype.initialize = function () {\n    var map = this.props.map;\n    map.addSource(this.id, this.source);\n    this.createLayer('symbol');\n    this.createLayer('line');\n    this.createLayer('fill');\n    this.createLayer('fill-extrusion');\n    this.createLayer('circle');\n  };\n  GeoJSONLayer.prototype.unbind = function () {\n    var _this = this;\n    var map = this.props.map;\n    if (map.getSource(this.id)) {\n      var layers = map.getStyle().layers;\n      if (layers) {\n        layers.filter(function (layer) {\n          return layer.source === _this.id;\n        }).forEach(function (layer) {\n          return map.removeLayer(layer.id);\n        });\n      }\n      map.removeSource(this.id);\n    }\n    types.forEach(function (type) {\n      var events = Object.keys(eventToHandler);\n      events.forEach(function (event) {\n        var prop = toCamelCase(type) + eventToHandler[event];\n        if (_this.props[prop]) {\n          map.off(event, _this.buildLayerId(type), _this.props[prop]);\n        }\n      });\n    });\n    this.layerIds.forEach(function (lId) {\n      if (map.getLayer(lId)) {\n        map.removeLayer(lId);\n      }\n    });\n  };\n  GeoJSONLayer.prototype.UNSAFE_componentWillMount = function () {\n    var map = this.props.map;\n    this.initialize();\n    map.on('styledata', this.onStyleDataChange);\n  };\n  GeoJSONLayer.prototype.componentWillUnmount = function () {\n    var map = this.props.map;\n    if (!map || !map.getStyle()) {\n      return;\n    }\n    map.off('styledata', this.onStyleDataChange);\n    this.unbind();\n  };\n  GeoJSONLayer.prototype.UNSAFE_componentWillReceiveProps = function (props) {\n    var _this = this;\n    var _a = this.props,\n      data = _a.data,\n      before = _a.before,\n      layerOptions = _a.layerOptions,\n      map = _a.map;\n    var source = map.getSource(this.id);\n    if (!this.isGeoJSONSource(source)) {\n      return;\n    }\n    if (props.data !== data) {\n      source.setData(props.data);\n      this.source = __assign({\n        type: 'geojson'\n      }, props.sourceOptions, {\n        data: props.data\n      });\n    }\n    var layerFilterChanged = props.layerOptions && layerOptions && !isEqual(props.layerOptions.filter, layerOptions.filter);\n    types.forEach(function (type) {\n      var layerId = _this.buildLayerId(type);\n      if (props.layerOptions && layerFilterChanged) {\n        map.setFilter(layerId, props.layerOptions.filter || []);\n      }\n      var paintProp = toCamelCase(type) + 'Paint';\n      if (!isEqual(props[paintProp], _this.props[paintProp])) {\n        var paintDiff_1 = diff(_this.props[paintProp], props[paintProp]);\n        Object.keys(paintDiff_1).forEach(function (key) {\n          map.setPaintProperty(layerId, key, paintDiff_1[key]);\n        });\n      }\n      var layoutProp = toCamelCase(type) + 'Layout';\n      if (!isEqual(props[layoutProp], _this.props[layoutProp])) {\n        var layoutDiff_1 = diff(_this.props[layoutProp], props[layoutProp]);\n        Object.keys(layoutDiff_1).forEach(function (key) {\n          map.setLayoutProperty(layerId, key, layoutDiff_1[key]);\n        });\n      }\n      var events = Object.keys(eventToHandler);\n      events.forEach(function (event) {\n        var prop = toCamelCase(type) + eventToHandler[event];\n        if (props[prop] !== _this.props[prop]) {\n          if (_this.props[prop]) {\n            map.off(event, layerId, _this.props[prop]);\n          }\n          if (props[prop]) {\n            map.on(event, layerId, props[prop]);\n          }\n        }\n      });\n      if (before !== props.before) {\n        map.moveLayer(layerId, props.before);\n      }\n    });\n  };\n  GeoJSONLayer.prototype.render = function () {\n    return null;\n  };\n  return GeoJSONLayer;\n}(React.Component);\nexport { GeoJSONLayer };\nexport default withMap(GeoJSONLayer);","map":{"version":3,"sources":["../src/geojson-layer.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nvar isEqual = require('deep-equal');\nimport diff from './util/diff';\nimport { generateID } from './util/uid';\nimport { withMap } from './context';\nvar types = ['symbol', 'line', 'fill', 'fill-extrusion', 'circle'];\nvar toCamelCase = function (str) {\n    return str\n        .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (letter, index) {\n        return index === 0 ? letter.toLowerCase() : letter.toUpperCase();\n    })\n        .replace(/[\\s+]|-/g, '');\n};\nvar eventToHandler = {\n    mousemove: 'OnMouseMove',\n    mouseenter: 'OnMouseEnter',\n    mouseleave: 'OnMouseLeave',\n    mousedown: 'OnMouseDown',\n    mouseup: 'OnMouseUp',\n    click: 'OnClick'\n};\nvar GeoJSONLayer = (function (_super) {\n    __extends(GeoJSONLayer, _super);\n    function GeoJSONLayer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.id = _this.props.id || \"geojson-\" + generateID();\n        _this.source = __assign({ type: 'geojson' }, _this.props.sourceOptions, { data: _this.props.data });\n        _this.layerIds = [];\n        _this.buildLayerId = function (type) {\n            return _this.id + \"-\" + type;\n        };\n        _this.createLayer = function (type) {\n            var _a = _this.props, before = _a.before, layerOptions = _a.layerOptions, map = _a.map;\n            var layerId = _this.buildLayerId(type);\n            _this.layerIds.push(layerId);\n            var paint = _this.props[toCamelCase(type) + \"Paint\"] || {};\n            var visibility = Object.keys(paint).length ? 'visible' : 'none';\n            var layout = _this.props[toCamelCase(type) + \"Layout\"] || {\n                visibility: visibility\n            };\n            map.addLayer(__assign({ id: layerId, source: _this.id, type: type,\n                paint: paint,\n                layout: layout }, layerOptions), before);\n            _this.mapLayerMouseHandlers(type);\n        };\n        _this.mapLayerMouseHandlers = function (type) {\n            var map = _this.props.map;\n            var layerId = _this.buildLayerId(type);\n            var events = Object.keys(eventToHandler);\n            events.forEach(function (event) {\n                var handler = _this.props[\"\" + toCamelCase(type) + eventToHandler[event]] || null;\n                if (handler) {\n                    map.on(event, layerId, handler);\n                }\n            });\n        };\n        _this.onStyleDataChange = function () {\n            if (!_this.props.map.getSource(_this.id)) {\n                _this.unbind();\n                _this.initialize();\n                _this.forceUpdate();\n            }\n        };\n        _this.isGeoJSONSource = function (source) {\n            return !!source &&\n                typeof source.setData === 'function';\n        };\n        return _this;\n    }\n    GeoJSONLayer.prototype.initialize = function () {\n        var map = this.props.map;\n        map.addSource(this.id, this.source);\n        this.createLayer('symbol');\n        this.createLayer('line');\n        this.createLayer('fill');\n        this.createLayer('fill-extrusion');\n        this.createLayer('circle');\n    };\n    GeoJSONLayer.prototype.unbind = function () {\n        var _this = this;\n        var map = this.props.map;\n        if (map.getSource(this.id)) {\n            var layers = map.getStyle().layers;\n            if (layers) {\n                layers\n                    .filter(function (layer) { return layer.source === _this.id; })\n                    .forEach(function (layer) { return map.removeLayer(layer.id); });\n            }\n            map.removeSource(this.id);\n        }\n        types.forEach(function (type) {\n            var events = Object.keys(eventToHandler);\n            events.forEach(function (event) {\n                var prop = toCamelCase(type) + eventToHandler[event];\n                if (_this.props[prop]) {\n                    map.off(event, _this.buildLayerId(type), _this.props[prop]);\n                }\n            });\n        });\n        this.layerIds.forEach(function (lId) {\n            if (map.getLayer(lId)) {\n                map.removeLayer(lId);\n            }\n        });\n    };\n    GeoJSONLayer.prototype.UNSAFE_componentWillMount = function () {\n        var map = this.props.map;\n        this.initialize();\n        map.on('styledata', this.onStyleDataChange);\n    };\n    GeoJSONLayer.prototype.componentWillUnmount = function () {\n        var map = this.props.map;\n        if (!map || !map.getStyle()) {\n            return;\n        }\n        map.off('styledata', this.onStyleDataChange);\n        this.unbind();\n    };\n    GeoJSONLayer.prototype.UNSAFE_componentWillReceiveProps = function (props) {\n        var _this = this;\n        var _a = this.props, data = _a.data, before = _a.before, layerOptions = _a.layerOptions, map = _a.map;\n        var source = map.getSource(this.id);\n        if (!this.isGeoJSONSource(source)) {\n            return;\n        }\n        if (props.data !== data) {\n            source.setData(props.data);\n            this.source = __assign({ type: 'geojson' }, props.sourceOptions, { data: props.data });\n        }\n        var layerFilterChanged = props.layerOptions &&\n            layerOptions &&\n            !isEqual(props.layerOptions.filter, layerOptions.filter);\n        types.forEach(function (type) {\n            var layerId = _this.buildLayerId(type);\n            if (props.layerOptions && layerFilterChanged) {\n                map.setFilter(layerId, props.layerOptions.filter || []);\n            }\n            var paintProp = toCamelCase(type) + 'Paint';\n            if (!isEqual(props[paintProp], _this.props[paintProp])) {\n                var paintDiff_1 = diff(_this.props[paintProp], props[paintProp]);\n                Object.keys(paintDiff_1).forEach(function (key) {\n                    map.setPaintProperty(layerId, key, paintDiff_1[key]);\n                });\n            }\n            var layoutProp = toCamelCase(type) + 'Layout';\n            if (!isEqual(props[layoutProp], _this.props[layoutProp])) {\n                var layoutDiff_1 = diff(_this.props[layoutProp], props[layoutProp]);\n                Object.keys(layoutDiff_1).forEach(function (key) {\n                    map.setLayoutProperty(layerId, key, layoutDiff_1[key]);\n                });\n            }\n            var events = Object.keys(eventToHandler);\n            events.forEach(function (event) {\n                var prop = toCamelCase(type) + eventToHandler[event];\n                if (props[prop] !== _this.props[prop]) {\n                    if (_this.props[prop]) {\n                        map.off(event, layerId, _this.props[prop]);\n                    }\n                    if (props[prop]) {\n                        map.on(event, layerId, props[prop]);\n                    }\n                }\n            });\n            if (before !== props.before) {\n                map.moveLayer(layerId, props.before);\n            }\n        });\n    };\n    GeoJSONLayer.prototype.render = function () {\n        return null;\n    };\n    return GeoJSONLayer;\n}(React.Component));\nexport { GeoJSONLayer };\nexport default withMap(GeoJSONLayer);\n//# sourceMappingURL=geojson-layer.js.map"]},"metadata":{},"sourceType":"module"}